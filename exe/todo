#!/usr/bin/env ruby
# frozen_string_literal: true

require 'optparse'
require 'tty-prompt'
require 'todo'

PROMPT = TTY::Prompt.new

# Configuration
HELP_TEXT = <<~HELP
  Subcommands:
    do    :                 Add a new item to a todo list.
    did   :                 Complete an item in a todo list.
    list  :                 List all todo lists.
    show  :                 Show a todo list.
HELP

GLOBAL_COMMAND = OptionParser.new do |opts|
  opts.banner = 'Usage: todo [options] [subcommand [options] [args]]'
  opts.separator ''
  opts.separator HELP_TEXT
end

SUBCOMMANDS = {
  'do' => OptionParser.new do |opts|
    opts.banner = 'todo do [name] [text...]'
    opts.separator ''
    opts.separator 'Add a new item to the named todo list.'
    opts.separator 'Multiple words are joined with spaces (like `echo`)'
    opts.on('-h', '--help', 'Show this help message') do
      puts opts
      exit
    end
  end,
  'did' => OptionParser.new do |opts|
    opts.banner = 'todo did [options] [name] [index...]'
    opts.separator ''
    opts.separator 'Complete one or more items in the named todo list.'
    opts.on('-h', '--help', 'Show this help message') do
      puts opts
      exit
    end
  end,
  'list' => OptionParser.new do |opts|
    opts.banner = 'todo list'
    opts.separator ''
    opts.separator 'List all todo lists.'
    opts.on('-h', '--help', 'Show this help message') do
      puts opts
      exit
    end
  end,
  'show' => OptionParser.new do |opts|
    opts.banner = 'todo show [options] <name>'
    opts.separator ''
    opts.separator 'Show the named todo list.'
    opts.on('-h', '--help', 'Show this help message') do
      puts opts
      exit
    end
  end
}.freeze

def prompt_subcommand
  PROMPT.select('Select a subcommand', SUBCOMMANDS.keys)
end

def prompt_name
  PROMPT.select('Select a todo list', Todo.find_lists)
end

def prompt_todo_text
  PROMPT.ask('What do you need to do?')
end

def prompt_todo_indices(todo_list)
  PROMPT.multi_select 'What did you do?' do |menu|
    todo_list.items.each_with_index do |todo, index|
      menu.choice todo, index
    end
  end
end

# CLI Parsing / main logic
GLOBAL_COMMAND.order!
subcommand = ARGV.shift
subcommand = prompt_subcommand if subcommand.nil?
SUBCOMMANDS[subcommand]&.order!

case subcommand
when 'do'
  name = ARGV.shift
  name = prompt_name if name.nil?
  text = if ARGV.empty?
           prompt_todo_text
         else
           ARGV.join(' ')
         end
  todo = Todo.load_list(name)
  todo.add!(text)
  Todo.save_list(name, todo)
when 'did'
  name = ARGV.shift
  name = prompt_name if name.nil?
  todo = Todo.load_list(name)
  indices = if ARGV.empty?
              prompt_todo_indices(todo)
            else
              ARGV.map(&:to_i)
            end
  todo.complete!(*indices)
  Todo.save_list(name, todo)
when 'list'
  puts(Todo.find_lists)
when 'show'
  name = ARGV.shift
  name = prompt_name if name.nil?
  todo = Todo.load_list(name)
  puts todo
else
  puts global_command
end
